# Terraform Configuration for Infrastructure

provider "aws" {
  region = "us-east-1"
}

resource "aws_s3_bucket" "skillsync_bucket" {
  bucket = "skillsync-bucket"
  acl    = "private"

  tags = {
    Name        = "skillsync_bucket"
    Environment = "production"
  }
}

resource "aws_db_instance" "skillsync_db" {
  identifier         = "skillsync-db"
  engine             = "mysql"
  instance_class     = "db.t2.micro"
  allocated_storage   = 20
  username           = "admin"
  password           = "password123"
  db_name            = "skillsync"
  skip_final_snapshot = true

  tags = {
    Name        = "skillsync_db"
    Environment = "production"
  }
}

resource "aws_lambda_function" "skillsync_lambda" {
  function_name = "skillsyncFunction"
  handler       = "index.handler"
  runtime       = "nodejs14.x"
  role          = aws_iam_role.lambda_exec.arn
  source_code_hash = filebase64sha256("lambda.zip")

  environment {
    BUCKET_NAME = aws_s3_bucket.skillsync_bucket.bucket
  }
}

resource "aws_iam_role" "lambda_exec" {
  name = "lambda_exec_role"

  assume_role_policy = jsonencode({
    Version = "2012-10-17"
    Statement = [
      {
        Action = "sts:AssumeRole"
        Principal = {
          Service = "lambda.amazonaws.com"
        }
        Effect = "Allow"
        Sid    = ""
      },
    ]
  })
}

resource "aws_iam_policy_attachment" "lambda_policy" {
  name       = "lambda_policy_attachment"
  roles      = [aws_iam_role.lambda_exec.name]
  policy_arn = "arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
}

output "s3_bucket_name" {
  value = aws_s3_bucket.skillsync_bucket.bucket
}

output "db_endpoint" {
  value = aws_db_instance.skillsync_db.endpoint
}